import pika
 import time

 # Step 1: Establish connection to RabbitMQ server
 connection = pika.BlockingConnection(pika.ConnectionParameters('localhost'))
 channel = connection.channel()

 # Step 2: Declare a durable queue named 'task_queue'
 channel.queue_declare(queue='task_queue', durable=True)

 # Step 3: Ensure that each worker gets one message at a time
 channel.basic_qos(prefetch_count=1)

 # Step 4: Define the callback function to process messages
 def callback(ch, method, properties, body):
     message = body.decode()
     print(f" [x] Received {message}").
     time.sleep(message.count('.'))  # Simulate work by sleeping
     print(" [x] Done")
     ch.basic_ack(delivery_tag=method.delivery_tag)  # Acknowledge message

 # Step 5: Set up the consumer
 channel.basic_consume(queue='task_queue', on_message_callback=callback)

 print(' [*] Waiting for messages. To exit press CTRL+C')
 channel.start_consuming()

